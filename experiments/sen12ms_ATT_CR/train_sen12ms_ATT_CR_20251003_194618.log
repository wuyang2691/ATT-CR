2025-10-03 19:46:18,283 INFO: 
                ____                _       _____  ____
               / __ ) ____ _ _____ (_)_____/ ___/ / __ \
              / __  |/ __ `// ___// // ___/\__ \ / /_/ /
             / /_/ // /_/ /(__  )/ // /__ ___/ // _, _/
            /_____/ \__,_//____//_/ \___//____//_/ |_|
     ______                   __   __                 __      __
    / ____/____   ____   ____/ /  / /   __  __ _____ / /__   / /
   / / __ / __ \ / __ \ / __  /  / /   / / / // ___// //_/  / /
  / /_/ // /_/ // /_/ // /_/ /  / /___/ /_/ // /__ / /<    /_/
  \____/ \____/ \____/ \____/  /_____/\____/ \___//_/|_|  (_)
    
Version Information: 
	BasicSR: 1.2.0+10018c6
	PyTorch: 2.5.1
	TorchVision: 0.20.1
2025-10-03 19:46:18,283 INFO: 
  name: sen12ms_ATT_CR
  model_type: ImageCleanModel
  scale: 1
  num_gpu: 4
  manual_seed: 100
  datasets:[
    train:[
      name: TrainSet
      type: SEN12MSCRDataset
      dataroot_gt: /data/wy/CV/data/cloud/SEN12MS-CR/train
      dataroot_lq: /data/wy/CV/data/cloud/SEN12MS-CR/train
      geometric_augs: True
      filename_tmpl: {}
      io_backend:[
        type: disk
      ]
      use_shuffle: True
      num_worker_per_gpu: 8
      batch_size_per_gpu: 1
      mini_batch_sizes: [4]
      iters: [190530]
      gt_size: 256
      gt_sizes: [256]
      dataset_enlarge_ratio: 1
      prefetch_mode: None
      phase: train
      scale: 1
    ]
    val:[
      name: ValSet
      type: SEN12MSCRDataset
      dataroot_gt: /data/wy/CV/data/cloud/SEN12MS-CR/val
      dataroot_lq: /data/wy/CV/data/cloud/SEN12MS-CR/val
      gt_size: 256
      io_backend:[
        type: disk
      ]
      phase: val
      scale: 1
    ]
  ]
  network_g:[
    type: ATT_CR
    inp_channels: 15
    out_channels: 13
    dim: 48
    num_blocks: [1, 2, 8, 2, 1]
    num_refinement_blocks: 2
    heads: [2, 2, 8, 2, 2]
    scales: [[3, 5], [3, 5], [1, 3], [3, 5], [3, 5]]
    ffn_expansion_factor: 2.66
    bias: False
    LayerNorm_type: WithBias
  ]
  path:[
    pretrain_network_g: None
    strict_load_g: True
    resume_state: None
    root: /data/wy/CV/code/Cloud_Removal/ATT-CR-main
    experiments_root: /data/wy/CV/code/Cloud_Removal/ATT-CR-main/experiments/sen12ms_ATT_CR
    models: /data/wy/CV/code/Cloud_Removal/ATT-CR-main/experiments/sen12ms_ATT_CR/models
    training_states: /data/wy/CV/code/Cloud_Removal/ATT-CR-main/experiments/sen12ms_ATT_CR/training_states
    log: /data/wy/CV/code/Cloud_Removal/ATT-CR-main/experiments/sen12ms_ATT_CR
    visualization: /data/wy/CV/code/Cloud_Removal/ATT-CR-main/experiments/sen12ms_ATT_CR/visualization
  ]
  train:[
    total_iter: 190530
    warmup_iter: -1
    use_grad_clip: True
    scheduler:[
      type: MultiStepLR
      milestones: [95265, 127020, 158775]
      gamma: 0.5
    ]
    mixing_augs:[
      mixup: False
      mixup_beta: 1.2
      use_identity: True
    ]
    optim_g:[
      type: AdamW
      lr: 0.0006
      weight_decay: 0.0001
      betas: [0.9, 0.999]
    ]
    pixel_opt:[
      type: L1Loss
      loss_weight: 1
      reduction: mean
    ]
  ]
  val:[
    window_size: 8
    val_freq: 63510.0
    save_img: False
    rgb2bgr: True
    use_image: True
    max_minibatch: 4
    metrics:[
      psnr:[
        type: calculate_psnr
        crop_border: 0
        test_y_channel: False
      ]
    ]
  ]
  logger:[
    print_freq: 2117
    save_checkpoint_freq: 6351.0
    use_tb_logger: True
    wandb:[
      project: None
      resume_id: None
    ]
  ]
  dist_params:[
    backend: nccl
    port: 29500
  ]
  is_train: True
  dist: True
  rank: 0
  world_size: 4

2025-10-03 19:46:19,251 INFO: Dataset SEN12MSCRDataset - TrainSet is created.
2025-10-03 19:46:19,251 INFO: Training statistics:
	Number of train images: 101615
	Dataset enlarge ratio: 1
	Batch size per gpu: 1
	World size (gpu number): 4
	Require iter number per epoch: 25404
	Total epochs: 8; iters: 190530.
2025-10-03 19:46:19,289 INFO: Dataset SEN12MSCRDataset - ValSet is created.
2025-10-03 19:46:19,289 INFO: Number of val images/folders in ValSet: 8623
2025-10-03 19:46:20,494 INFO: Network: DistributedDataParallel - ATT_CR, with parameters: 6,943,884
2025-10-03 19:46:20,494 INFO: ATT_CR(
  (patch_embed): OverlapPatchEmbed(
    (proj): Conv2d(15, 48, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  )
  (encoder_level1): Sequential(
    (0): TransformerBlock(
      (norm1): LayerNorm(
        (body): WithBias_LayerNorm()
      )
      (norm2): LayerNorm(
        (body): WithBias_LayerNorm()
      )
      (ffn): FeedForward(
        (project_in): Conv2d(48, 254, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (dwconv): Conv2d(254, 254, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=254, bias=False)
        (project_out): Conv2d(127, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (gloabl_attn): MS_Linear_Attention(
        (query): Conv2d(48, 48, kernel_size=(1, 1), stride=(1, 1))
        (aggreg): ModuleList(
          (0): Sequential(
            (0): Conv2d(48, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (1): Conv2d(96, 96, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=96, bias=False)
          )
          (1): Sequential(
            (0): Conv2d(48, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (1): Conv2d(96, 96, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=96, bias=False)
          )
        )
        (proj): Linear(in_features=96, out_features=48, bias=True)
        (output_linear): Conv2d(48, 48, kernel_size=(1, 1), stride=(1, 1))
        (causal_att_down_tri): CausalLinearAttention(
          (feature_map): ActivationFunctionFeatureMap()
        )
        (gate): Sequential(
          (0): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(12, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): LeakyReLU(negative_slope=0.2, inplace=True)
          (4): Conv2d(12, 48, kernel_size=(1, 1), stride=(1, 1))
        )
      )
    )
  )
  (down1_2): Downsample(
    (body): Sequential(
      (0): Conv2d(48, 24, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (1): PixelUnshuffle(downscale_factor=2)
    )
  )
  (encoder_level2): Sequential(
    (0): TransformerBlock(
      (norm1): LayerNorm(
        (body): WithBias_LayerNorm()
      )
      (norm2): LayerNorm(
        (body): WithBias_LayerNorm()
      )
      (ffn): FeedForward(
        (project_in): Conv2d(96, 510, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (dwconv): Conv2d(510, 510, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=510, bias=False)
        (project_out): Conv2d(255, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (gloabl_attn): MS_Linear_Attention(
        (query): Conv2d(96, 96, kernel_size=(1, 1), stride=(1, 1))
        (aggreg): ModuleList(
          (0): Sequential(
            (0): Conv2d(96, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (1): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=192, bias=False)
          )
          (1): Sequential(
            (0): Conv2d(96, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (1): Conv2d(192, 192, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=192, bias=False)
          )
        )
        (proj): Linear(in_features=192, out_features=96, bias=True)
        (output_linear): Conv2d(96, 96, kernel_size=(1, 1), stride=(1, 1))
        (causal_att_down_tri): CausalLinearAttention(
          (feature_map): ActivationFunctionFeatureMap()
        )
        (gate): Sequential(
          (0): Conv2d(96, 24, kernel_size=(1, 1), stride=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(24, 24, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): LeakyReLU(negative_slope=0.2, inplace=True)
          (4): Conv2d(24, 96, kernel_size=(1, 1), stride=(1, 1))
        )
      )
    )
    (1): TransformerBlock(
      (norm1): LayerNorm(
        (body): WithBias_LayerNorm()
      )
      (norm2): LayerNorm(
        (body): WithBias_LayerNorm()
      )
      (ffn): FeedForward(
        (project_in): Conv2d(96, 510, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (dwconv): Conv2d(510, 510, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=510, bias=False)
        (project_out): Conv2d(255, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (gloabl_attn): MS_Linear_Attention(
        (query): Conv2d(96, 96, kernel_size=(1, 1), stride=(1, 1))
        (aggreg): ModuleList(
          (0): Sequential(
            (0): Conv2d(96, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (1): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=192, bias=False)
          )
          (1): Sequential(
            (0): Conv2d(96, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (1): Conv2d(192, 192, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=192, bias=False)
          )
        )
        (proj): Linear(in_features=192, out_features=96, bias=True)
        (output_linear): Conv2d(96, 96, kernel_size=(1, 1), stride=(1, 1))
        (causal_att_down_tri): CausalLinearAttention(
          (feature_map): ActivationFunctionFeatureMap()
        )
        (gate): Sequential(
          (0): Conv2d(96, 24, kernel_size=(1, 1), stride=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(24, 24, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): LeakyReLU(negative_slope=0.2, inplace=True)
          (4): Conv2d(24, 96, kernel_size=(1, 1), stride=(1, 1))
        )
      )
    )
  )
  (down2_3): Downsample(
    (body): Sequential(
      (0): Conv2d(96, 48, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (1): PixelUnshuffle(downscale_factor=2)
    )
  )
  (encoder_level3): Sequential(
    (0): TransformerBlock(
      (norm1): LayerNorm(
        (body): WithBias_LayerNorm()
      )
      (norm2): LayerNorm(
        (body): WithBias_LayerNorm()
      )
      (ffn): FeedForward(
        (project_in): Conv2d(192, 1020, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (dwconv): Conv2d(1020, 1020, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1020, bias=False)
        (project_out): Conv2d(510, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (gloabl_attn): MS_Linear_Attention(
        (query): Conv2d(192, 192, kernel_size=(1, 1), stride=(1, 1))
        (aggreg): ModuleList(
          (0): Sequential(
            (0): Conv2d(192, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (1): Identity()
          )
          (1): Sequential(
            (0): Conv2d(192, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (1): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384, bias=False)
          )
        )
        (proj): Linear(in_features=384, out_features=192, bias=True)
        (output_linear): Conv2d(192, 192, kernel_size=(1, 1), stride=(1, 1))
        (causal_att_down_tri): CausalLinearAttention(
          (feature_map): ActivationFunctionFeatureMap()
        )
        (gate): Sequential(
          (0): Conv2d(192, 48, kernel_size=(1, 1), stride=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(48, 48, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): LeakyReLU(negative_slope=0.2, inplace=True)
          (4): Conv2d(48, 192, kernel_size=(1, 1), stride=(1, 1))
        )
      )
    )
    (1): TransformerBlock(
      (norm1): LayerNorm(
        (body): WithBias_LayerNorm()
      )
      (norm2): LayerNorm(
        (body): WithBias_LayerNorm()
      )
      (ffn): FeedForward(
        (project_in): Conv2d(192, 1020, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (dwconv): Conv2d(1020, 1020, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1020, bias=False)
        (project_out): Conv2d(510, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (gloabl_attn): MS_Linear_Attention(
        (query): Conv2d(192, 192, kernel_size=(1, 1), stride=(1, 1))
        (aggreg): ModuleList(
          (0): Sequential(
            (0): Conv2d(192, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (1): Identity()
          )
          (1): Sequential(
            (0): Conv2d(192, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (1): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384, bias=False)
          )
        )
        (proj): Linear(in_features=384, out_features=192, bias=True)
        (output_linear): Conv2d(192, 192, kernel_size=(1, 1), stride=(1, 1))
        (causal_att_down_tri): CausalLinearAttention(
          (feature_map): ActivationFunctionFeatureMap()
        )
        (gate): Sequential(
          (0): Conv2d(192, 48, kernel_size=(1, 1), stride=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(48, 48, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): LeakyReLU(negative_slope=0.2, inplace=True)
          (4): Conv2d(48, 192, kernel_size=(1, 1), stride=(1, 1))
        )
      )
    )
    (2): TransformerBlock(
      (norm1): LayerNorm(
        (body): WithBias_LayerNorm()
      )
      (norm2): LayerNorm(
        (body): WithBias_LayerNorm()
      )
      (ffn): FeedForward(
        (project_in): Conv2d(192, 1020, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (dwconv): Conv2d(1020, 1020, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1020, bias=False)
        (project_out): Conv2d(510, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (gloabl_attn): MS_Linear_Attention(
        (query): Conv2d(192, 192, kernel_size=(1, 1), stride=(1, 1))
        (aggreg): ModuleList(
          (0): Sequential(
            (0): Conv2d(192, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (1): Identity()
          )
          (1): Sequential(
            (0): Conv2d(192, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (1): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384, bias=False)
          )
        )
        (proj): Linear(in_features=384, out_features=192, bias=True)
        (output_linear): Conv2d(192, 192, kernel_size=(1, 1), stride=(1, 1))
        (causal_att_down_tri): CausalLinearAttention(
          (feature_map): ActivationFunctionFeatureMap()
        )
        (gate): Sequential(
          (0): Conv2d(192, 48, kernel_size=(1, 1), stride=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(48, 48, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): LeakyReLU(negative_slope=0.2, inplace=True)
          (4): Conv2d(48, 192, kernel_size=(1, 1), stride=(1, 1))
        )
      )
    )
    (3): TransformerBlock(
      (norm1): LayerNorm(
        (body): WithBias_LayerNorm()
      )
      (norm2): LayerNorm(
        (body): WithBias_LayerNorm()
      )
      (ffn): FeedForward(
        (project_in): Conv2d(192, 1020, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (dwconv): Conv2d(1020, 1020, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1020, bias=False)
        (project_out): Conv2d(510, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (gloabl_attn): MS_Linear_Attention(
        (query): Conv2d(192, 192, kernel_size=(1, 1), stride=(1, 1))
        (aggreg): ModuleList(
          (0): Sequential(
            (0): Conv2d(192, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (1): Identity()
          )
          (1): Sequential(
            (0): Conv2d(192, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (1): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384, bias=False)
          )
        )
        (proj): Linear(in_features=384, out_features=192, bias=True)
        (output_linear): Conv2d(192, 192, kernel_size=(1, 1), stride=(1, 1))
        (causal_att_down_tri): CausalLinearAttention(
          (feature_map): ActivationFunctionFeatureMap()
        )
        (gate): Sequential(
          (0): Conv2d(192, 48, kernel_size=(1, 1), stride=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(48, 48, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): LeakyReLU(negative_slope=0.2, inplace=True)
          (4): Conv2d(48, 192, kernel_size=(1, 1), stride=(1, 1))
        )
      )
    )
    (4): TransformerBlock(
      (norm1): LayerNorm(
        (body): WithBias_LayerNorm()
      )
      (norm2): LayerNorm(
        (body): WithBias_LayerNorm()
      )
      (ffn): FeedForward(
        (project_in): Conv2d(192, 1020, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (dwconv): Conv2d(1020, 1020, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1020, bias=False)
        (project_out): Conv2d(510, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (gloabl_attn): MS_Linear_Attention(
        (query): Conv2d(192, 192, kernel_size=(1, 1), stride=(1, 1))
        (aggreg): ModuleList(
          (0): Sequential(
            (0): Conv2d(192, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (1): Identity()
          )
          (1): Sequential(
            (0): Conv2d(192, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (1): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384, bias=False)
          )
        )
        (proj): Linear(in_features=384, out_features=192, bias=True)
        (output_linear): Conv2d(192, 192, kernel_size=(1, 1), stride=(1, 1))
        (causal_att_down_tri): CausalLinearAttention(
          (feature_map): ActivationFunctionFeatureMap()
        )
        (gate): Sequential(
          (0): Conv2d(192, 48, kernel_size=(1, 1), stride=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(48, 48, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): LeakyReLU(negative_slope=0.2, inplace=True)
          (4): Conv2d(48, 192, kernel_size=(1, 1), stride=(1, 1))
        )
      )
    )
    (5): TransformerBlock(
      (norm1): LayerNorm(
        (body): WithBias_LayerNorm()
      )
      (norm2): LayerNorm(
        (body): WithBias_LayerNorm()
      )
      (ffn): FeedForward(
        (project_in): Conv2d(192, 1020, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (dwconv): Conv2d(1020, 1020, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1020, bias=False)
        (project_out): Conv2d(510, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (gloabl_attn): MS_Linear_Attention(
        (query): Conv2d(192, 192, kernel_size=(1, 1), stride=(1, 1))
        (aggreg): ModuleList(
          (0): Sequential(
            (0): Conv2d(192, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (1): Identity()
          )
          (1): Sequential(
            (0): Conv2d(192, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (1): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384, bias=False)
          )
        )
        (proj): Linear(in_features=384, out_features=192, bias=True)
        (output_linear): Conv2d(192, 192, kernel_size=(1, 1), stride=(1, 1))
        (causal_att_down_tri): CausalLinearAttention(
          (feature_map): ActivationFunctionFeatureMap()
        )
        (gate): Sequential(
          (0): Conv2d(192, 48, kernel_size=(1, 1), stride=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(48, 48, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): LeakyReLU(negative_slope=0.2, inplace=True)
          (4): Conv2d(48, 192, kernel_size=(1, 1), stride=(1, 1))
        )
      )
    )
    (6): TransformerBlock(
      (norm1): LayerNorm(
        (body): WithBias_LayerNorm()
      )
      (norm2): LayerNorm(
        (body): WithBias_LayerNorm()
      )
      (ffn): FeedForward(
        (project_in): Conv2d(192, 1020, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (dwconv): Conv2d(1020, 1020, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1020, bias=False)
        (project_out): Conv2d(510, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (gloabl_attn): MS_Linear_Attention(
        (query): Conv2d(192, 192, kernel_size=(1, 1), stride=(1, 1))
        (aggreg): ModuleList(
          (0): Sequential(
            (0): Conv2d(192, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (1): Identity()
          )
          (1): Sequential(
            (0): Conv2d(192, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (1): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384, bias=False)
          )
        )
        (proj): Linear(in_features=384, out_features=192, bias=True)
        (output_linear): Conv2d(192, 192, kernel_size=(1, 1), stride=(1, 1))
        (causal_att_down_tri): CausalLinearAttention(
          (feature_map): ActivationFunctionFeatureMap()
        )
        (gate): Sequential(
          (0): Conv2d(192, 48, kernel_size=(1, 1), stride=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(48, 48, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): LeakyReLU(negative_slope=0.2, inplace=True)
          (4): Conv2d(48, 192, kernel_size=(1, 1), stride=(1, 1))
        )
      )
    )
    (7): TransformerBlock(
      (norm1): LayerNorm(
        (body): WithBias_LayerNorm()
      )
      (norm2): LayerNorm(
        (body): WithBias_LayerNorm()
      )
      (ffn): FeedForward(
        (project_in): Conv2d(192, 1020, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (dwconv): Conv2d(1020, 1020, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1020, bias=False)
        (project_out): Conv2d(510, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (gloabl_attn): MS_Linear_Attention(
        (query): Conv2d(192, 192, kernel_size=(1, 1), stride=(1, 1))
        (aggreg): ModuleList(
          (0): Sequential(
            (0): Conv2d(192, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (1): Identity()
          )
          (1): Sequential(
            (0): Conv2d(192, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (1): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384, bias=False)
          )
        )
        (proj): Linear(in_features=384, out_features=192, bias=True)
        (output_linear): Conv2d(192, 192, kernel_size=(1, 1), stride=(1, 1))
        (causal_att_down_tri): CausalLinearAttention(
          (feature_map): ActivationFunctionFeatureMap()
        )
        (gate): Sequential(
          (0): Conv2d(192, 48, kernel_size=(1, 1), stride=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(48, 48, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): LeakyReLU(negative_slope=0.2, inplace=True)
          (4): Conv2d(48, 192, kernel_size=(1, 1), stride=(1, 1))
        )
      )
    )
  )
  (up3_2): Upsample(
    (body): Sequential(
      (0): Conv2d(192, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (1): PixelShuffle(upscale_factor=2)
    )
  )
  (reduce_chan_level3): Conv2d(192, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (decoder_level3): Sequential(
    (0): TransformerBlock(
      (norm1): LayerNorm(
        (body): WithBias_LayerNorm()
      )
      (norm2): LayerNorm(
        (body): WithBias_LayerNorm()
      )
      (ffn): FeedForward(
        (project_in): Conv2d(96, 510, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (dwconv): Conv2d(510, 510, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=510, bias=False)
        (project_out): Conv2d(255, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (gloabl_attn): MS_Linear_Attention(
        (query): Conv2d(96, 96, kernel_size=(1, 1), stride=(1, 1))
        (aggreg): ModuleList(
          (0): Sequential(
            (0): Conv2d(96, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (1): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=192, bias=False)
          )
          (1): Sequential(
            (0): Conv2d(96, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (1): Conv2d(192, 192, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=192, bias=False)
          )
        )
        (proj): Linear(in_features=192, out_features=96, bias=True)
        (output_linear): Conv2d(96, 96, kernel_size=(1, 1), stride=(1, 1))
        (causal_att_down_tri): CausalLinearAttention(
          (feature_map): ActivationFunctionFeatureMap()
        )
        (gate): Sequential(
          (0): Conv2d(96, 24, kernel_size=(1, 1), stride=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(24, 24, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): LeakyReLU(negative_slope=0.2, inplace=True)
          (4): Conv2d(24, 96, kernel_size=(1, 1), stride=(1, 1))
        )
      )
    )
    (1): TransformerBlock(
      (norm1): LayerNorm(
        (body): WithBias_LayerNorm()
      )
      (norm2): LayerNorm(
        (body): WithBias_LayerNorm()
      )
      (ffn): FeedForward(
        (project_in): Conv2d(96, 510, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (dwconv): Conv2d(510, 510, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=510, bias=False)
        (project_out): Conv2d(255, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (gloabl_attn): MS_Linear_Attention(
        (query): Conv2d(96, 96, kernel_size=(1, 1), stride=(1, 1))
        (aggreg): ModuleList(
          (0): Sequential(
            (0): Conv2d(96, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (1): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=192, bias=False)
          )
          (1): Sequential(
            (0): Conv2d(96, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (1): Conv2d(192, 192, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=192, bias=False)
          )
        )
        (proj): Linear(in_features=192, out_features=96, bias=True)
        (output_linear): Conv2d(96, 96, kernel_size=(1, 1), stride=(1, 1))
        (causal_att_down_tri): CausalLinearAttention(
          (feature_map): ActivationFunctionFeatureMap()
        )
        (gate): Sequential(
          (0): Conv2d(96, 24, kernel_size=(1, 1), stride=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(24, 24, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): LeakyReLU(negative_slope=0.2, inplace=True)
          (4): Conv2d(24, 96, kernel_size=(1, 1), stride=(1, 1))
        )
      )
    )
  )
  (up2_1): Upsample(
    (body): Sequential(
      (0): Conv2d(96, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (1): PixelShuffle(upscale_factor=2)
    )
  )
  (decoder_level1): Sequential(
    (0): TransformerBlock(
      (norm1): LayerNorm(
        (body): WithBias_LayerNorm()
      )
      (norm2): LayerNorm(
        (body): WithBias_LayerNorm()
      )
      (ffn): FeedForward(
        (project_in): Conv2d(96, 510, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (dwconv): Conv2d(510, 510, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=510, bias=False)
        (project_out): Conv2d(255, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (gloabl_attn): MS_Linear_Attention(
        (query): Conv2d(96, 96, kernel_size=(1, 1), stride=(1, 1))
        (aggreg): ModuleList(
          (0): Sequential(
            (0): Conv2d(96, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (1): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=192, bias=False)
          )
          (1): Sequential(
            (0): Conv2d(96, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (1): Conv2d(192, 192, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=192, bias=False)
          )
        )
        (proj): Linear(in_features=192, out_features=96, bias=True)
        (output_linear): Conv2d(96, 96, kernel_size=(1, 1), stride=(1, 1))
        (causal_att_down_tri): CausalLinearAttention(
          (feature_map): ActivationFunctionFeatureMap()
        )
        (gate): Sequential(
          (0): Conv2d(96, 24, kernel_size=(1, 1), stride=(1, 1))
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
          (2): Conv2d(24, 24, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): LeakyReLU(negative_slope=0.2, inplace=True)
          (4): Conv2d(24, 96, kernel_size=(1, 1), stride=(1, 1))
        )
      )
    )
  )
  (output): Conv2d(96, 13, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
)
2025-10-03 19:46:20,500 INFO: Model [ImageCleanModel] is created.
2025-10-03 19:46:59,143 INFO: Start training from epoch: 0, iter: 0
